apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: css-without-pvc
    app.kubernetes.io/name: community-solid-server
    app.kubernetes.io/version: 6.0.2
  name: css-community-solid-server
  namespace: solid
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: css-without-pvc
    app.kubernetes.io/name: community-solid-server
    app.kubernetes.io/version: 6.0.2
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: css-without-pvc
    app.kubernetes.io/name: community-solid-server
    app.kubernetes.io/version: 6.0.2
  name: css-community-solid-server
  namespace: solid
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: css-without-pvc
      app.kubernetes.io/name: community-solid-server
      app.kubernetes.io/version: 6.0.2
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: css-without-pvc
        app.kubernetes.io/name: community-solid-server
        app.kubernetes.io/version: 6.0.2
    spec:
      containers:
      - args:
        - -l
        - info
        - -b
        - http://community-solid-server.solid/
        - -c
        - config/default.json
        - -f
        - /data/
        env: []
        image: docker.io/solidproject/community-server:6.0.2
        imagePullPolicy: IfNotPresent
        name: community-solid-server
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        resources:
          limits: {}
          requests: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /data
          name: data
      enableServiceLinks: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
      - emptyDir: {}
        name: data
